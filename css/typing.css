#selectionScreen:not([style]) ~ section {
	display: none; /* FOUCを防ぐ */
}
[id$="Screen"] {
	height: 24em;
}
.frame {
	box-sizing: border-box;
	border: 1px black solid;
	border-radius: .5em;
}


#selectionScreen {
	display: flex;
	position: relative;
	flex-direction: column;
}
#categoryTabs {
	order: -1;
	width: 100%;
	box-sizing: border-box;
	padding: 0 .5em; /* section border-radius */
	margin-bottom: -1px;
}
#categoryTabs label {
	float: left;
	font-size: 1.05em;
	width: 5rem;
	box-sizing: border-box;
	border: 1px solid black;
	margin-right: .25em;
	border-radius: .5em .5em 0 0;
	text-align: center;
	background-color: #ddd;
}
#categoryTabs [for="about"] {
	float: right;
	margin: 0;
}
:nth-of-type(1):checked ~ #categoryTabs :nth-child(1),
:nth-of-type(2):checked ~ #categoryTabs :nth-child(2),
:nth-of-type(3):checked ~ #categoryTabs :nth-child(3),
:nth-of-type(4):checked ~ #categoryTabs :nth-child(4) {
	background-color: transparent;
}

[name="tab"],
[name="tab"]:not(:checked) + section {
	display: none;
}
[name="tab"] + section {
	width: 100%;
	height: 19em;
	padding: 1.5em 1em 1em 1.25em;
}
@media (max-width:800px) {
	[name="tab"] + section {
		overflow: scroll;
		padding: 1.5em .75em 0 1em;
	}
}

.themeButtons {
	display: flex;
	align-content: flex-start;
	flex-flow: column wrap;
}
.themeButtons button {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	font: inherit;
	font-size: .95em;
	width: 10em;
	border: .05em solid #aaa;
	margin: 0 1em .3em 0;
	background-color: #eee;
	line-height: 1.9;
	cursor: pointer;
}
.themeButtons button:active {
	background-color: transparent;
}
/* :not(:checked) + section のために優先度を落とす */
[id="about"] + section {
	display: flex;
	justify-content: space-between;
}
#about + section h3 {
	padding: 0;
	border: none;
	margin: 0 0 1em;
	font-size: 1.1em;
}

#selectionScreen aside,
[data-caption]:hover::before {
	font-size: 1rem;
	position: absolute;
	bottom: 0;
	left: 0;
	width: 100%;
	height: 2.5em;
	box-sizing: border-box;
	border: 1px solid black;
}
[data-caption]:hover::before {
	display: flex;
	padding: 0 .75em;
	align-items: center;
	line-height: 1.1;
	text-align: left;
	font-weight: normal;
	content: attr(data-caption);
}



#rankList {
	width: 6em;
	padding: 0 2.5em;
	margin: 0;
	overflow-x: hidden;
	overflow-y: scroll;
	flex-shrink: 0;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	cursor: default;
	display: none;
	--unit-height: 1rem / 29;
}
@supports(--css: variables) {
	#rankList {display: block;}
}
@media (max-width:800px) {
	#rankList {
		overflow-y: hidden;
		width: 4.5em;
		padding: 0 0 0 2.5em;
	}
}

#rankList li,
#rankList li::before {
	display: flex;
	justify-content: center;
	align-items: center;
}
#rankList li {
	/* 0以上がtrue、0未満がfalse */
	/* Arrow以上のランクは、score-rangeが一定である必要がある */
	--is-display-rank-name: calc(var(--high-score) - var(--required-score));
	--is-display-rank-area: calc(var(--is-display-rank-name) + var(--score-range, 50));
	position: relative;
	font-size: .95em;
	width: 100%;
	height: 100%;
	max-height: calc(var(--score-range, 50) * var(--unit-height));
}
#rankList li:nth-last-child(n+7) { /* Falcon+ */
	height: calc((var(--is-display-rank-area) + 1) * 99em);
	z-index: var(--is-display-rank-area);
}
/* --high-scoreが870以上のとき、#rankList::afterが見切れないようにする */
#rankList li:first-child {
	height: calc(var(--is-display-rank-name) * var(--unit-height));
	max-height: none;
}

#rankList li::before {
	position: absolute;
	top: 0;
	height: 100%;
	background-color: hsl(0,0%,99%);
	pointer-events: none;
}
#rankList li:nth-last-child(n+6)::before { /* Arrow+ */
	left: -5em;
	max-width: calc(100% + 10em);
	/* widthが0になると、？が隠れる */
	width: calc(var(--is-display-rank-name) * -99em);
	content: "？";
}
#rankList li:hover::before {
	font-size: .95em;
	left: 0;
	width: 100%;
	box-sizing: border-box;
	border-top: 2px solid transparent;
	background-clip: content-box;
	content: attr(data-required-kps) "打/秒";
}

#rankList::after,
#rankList li::after {
	font-size: .9em;
	width: 100%;
	border-top: 1px solid currentcolor;
	line-height: 0;
	text-indent: 103%;
	content: attr(data-score);
}
#rankList::after {
	display: block;
	position: relative;
	z-index: 999;
	pointer-events: none;
	transform: translateY(calc(var(--high-score) * var(--unit-height) * -1));
}
#rankList li::after {
	font-size: .95em;
	position: absolute;
	left: 0;
	bottom: -1px;
	direction: rtl;
}




@media (max-width:800px) {
	#typingScreen,
	#resultsScreen {
		font-size: calc(23.5em / 39);
	}
}

#typingScreen header {
	display: flex;
	align-items: center;
	justify-content: space-between;
	margin: 0 0 .5em;
}
#typingScreen header div {
	width: 6em;
}
#remainingNum {
	font-size: 1.35em;
	background-color: transparent;
	width: 2em;
	border: 0;
	outline: 1px solid #aaa;
}
#remainingNum:invalid {
	box-shadow: 0 0 .5em red;
}
#remainingNum:disabled {
	color: black;
	outline: 0;
}

#textTitle {
	display: inline-block;
	font-size: 1.35em;
	font-weight: normal;
	padding: 0 .3em;
	border: 0;
	margin: 0;
	outline: .2em ridge #999;
}

#sentencesFrame {
	width: 100%;
	padding: .75em 0 .75em 1.25em;
}
.frameOnTypo {
	animation: mistyped .75s;
}
@keyframes mistyped {
	from {box-shadow: 0 0 1.5em red inset;}
	to {box-shadow: 0 0 0 0 red inset;}
}
#sentencesFrame p {
	margin: 0;
}
#rubyBase {
	font-size: 1.35em;
	line-height: 1.9;
	font-weight: bold;
}
#rubySentence {
	font-size: 1.2em;
	line-height: 1.9;
	font-weight: bold;
	color: silver;
}
#rubySentence .typed {
	color: limegreen;
}
#romanized {
	font-size: 1.35em;
	color: silver;
	font-weight: normal;
}
#romanized .typed {
	color: darkorange;
}
#meter {
	height: .2em;
	margin: .2em .5em;
	outline: inset .1em #ddd;
	--value: 50%;
	background-image: linear-gradient(to right,
		tomato var(--value), transparent var(--value));
}
#nextRubyBase {
	margin: 0 0 .1em .3em;
}
#nextRubyBase::before {
	content: "次：";
}


#resultsScreen {
	padding-top: .1px;
	box-sizing: border-box;
}
#resultsFrame {
	margin: 1.5em auto 1em;
	width: 22em;
	padding: 1.25em;
	white-space: nowrap;
}
#resultsFrame h3 {
	padding: 0;
	border: 0;
	margin: 0;
	font-size: 1.4em;
	text-align: center;
	line-height: 1.2;
}
#resultsFrame dl:first-of-type {
	font-size: 1.25em;
}
#resultsFrame dl:not(:first-of-type) {
	font-size: 1.05em;
	float: left;
	width: 50%;
	margin: 0;
}
#resultsFrame dt,
#resultsFrame dd {
	border-bottom: .05em solid #999;
	margin-bottom: .5em;
}
#resultsFrame dt {
	float: left;
	width: calc(50% + .5em);
	text-align: right;
}
#resultsFrame dt::after {
	content: "：";
}
#resultsFrame dd::after {
	content: attr(data-unit);
}

.kbdButtonWrapper {
	display: flex;
	align-items: center;
	justify-content: center;
}
#resultsScreen [data-event-key=" "] {
	width: 6.5em;
}



:root {
	--key-width: 2.25em;
	--key-height: 2.1em;
	--border-width: .2em;
	--key-gap: .2em;
	--hue-saturation: 0,0%;
	--max-lightness: 100%;
}
.candidate {
	--hue-saturation: 0,100%;
}
.otherCandidates {
	--hue-saturation: 210,100%;
}
.candidate,
.otherCandidates {
	--max-lightness: 95%;
	color: hsl(var(--hue-saturation),50%);
}

/* display:inline-blockにすると、押下時にずれる */
#keyboard kbd {
	float: left;
}
kbd {
	--top-color: hsl(var(--hue-saturation), var(--max-lightness));
	--bg-color: hsl(var(--hue-saturation), calc(var(--max-lightness) - 5%));
	--lr-color: hsl(var(--hue-saturation), calc(var(--max-lightness) - 10%));
	--btm-color: hsl(var(--hue-saturation), calc(var(--max-lightness) - 15%));
	--shadow-color: hsl(var(--hue-saturation), calc(var(--max-lightness) - 25%));

	display: inline-block;
	box-sizing: border-box;
	width: var(--key-width);
	height: var(--key-height);
	border: var(--border-width) solid;
	border-color: var(--top-color) var(--lr-color) var(--btm-color);
	margin: var(--key-gap);
	border-radius: var(--border-width);
	background-color: var(--bg-color);
	box-shadow: 0 0 0 .1em var(--shadow-color);
	font: inherit;
	text-align: center;
}
[data-event-key]:hover {
	box-shadow: 0 0 0 .1em var(--shadow-color),
		0 0 .5em hsl(0,100%,50%);
}
kbd.onTyped,
[data-event-key]:active {
	line-height: 1.8;
	--top-color: hsl(var(--hue-saturation), calc(var(--max-lightness) - 28%));
	--bg-color: hsl(var(--hue-saturation), calc(var(--max-lightness) - 15%));
	--lr-color: hsl(var(--hue-saturation), calc(var(--max-lightness) - 20%));
	--btm-color: hsl(var(--hue-saturation), calc(var(--max-lightness) - 10%));
}

#hankaku  {width: 1.4em;}
#tab      {width: 2.75em;}
#capslock {width: 3.75em;}
#shift    {width: 5em;}
#rShift   {width: 3.9em;}
#enter {
	--rows-shift: 1em; /* tab-width - capslock-width */
	--enter-width: 2.5em;
	position: relative;
	width: calc(var(--enter-width) + var(--rows-shift));
}
#enter::before,
#enter::after {
	position: absolute;
	top: calc(-1 * var(--border-width));
	box-sizing: border-box;
	border: inherit;
	background-color: inherit;
	content: "";
}
#enter::before {
	left: calc(var(--rows-shift) - var(--border-width));
	width: var(--enter-width);
	height: calc(var(--key-height) * 2 + var(--key-gap) * 2);
	box-shadow: inherit;
	border-radius: inherit;
	border-top-left-radius: 0;
}
#enter::after {
	left: 0;
	width: var(--rows-shift);
	height: var(--key-height);
	border-left: none;
	border-right: none;
}